{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/promotions.js","redux/leaders.js","redux/comments.js","redux/forms.js","redux/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","dishesLoading","dishesErrMess","ErrMess","active","Header","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Fragment","dark","expand","onClick","href","height","isOpen","navbar","outline","toggle","onSubmit","htmlFor","type","innerRef","input","check","color","Component","Footer","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","designation","description","Home","dishErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","JSON","stringify","postFeedback","resetFeedbackForm","role","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","RenderLeader","tag","left","middle","object","body","heading","About","title","list","leaders","CommentForm","postComment","dishId","rating","author","comment","RenderDish","RenderComments","comments","detailComments","date","Date","toLocaleDateString","day","month","year","class","DishDetail","addFeedback","feedback","payload","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","message","actions","reset","newFeedback","firstname","lastname","telnum","email","agree","contactType","Dishes","action","Promotions","Leaders","Comments","concat","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce361993.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n}","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n\nfunction RenderMenuItem({ dish }) {\n    return (\n        <Card >\n            <Link to={`/menu/${dish.id}`}>\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}></CardImg>\n                <CardImgOverlay>\n                    <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay >\n            </Link>\n        </Card>\n\n    );\n}\n\nconst Menu = (props) => {\n    \n    const menu = props.dishes.dishes.map((dish) => {\n        return (\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                <RenderMenuItem dish={dish} />\n            </div>\n        );\n    });\n\n    if (props.dishesLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.dishesErrMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.dishes.ErrMess}</h4>\n                </div>\n            </div>\n        );\n    } else\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n\n}\n\n\nexport default Menu;","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, \n    Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n            + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n\n    }\n\n    toggleModal() {\n        this.setState({\n        isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand  className=\"mr-auto\" href=\"/\">\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"30\" alt=\"Ristorante Con Fusion\" />\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <span className=\"fa fa-home fa-lg\">Home</span>\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <span className=\"fa fa-info fa-lg\">About us</span>\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\n                                        <span className=\"fa fa-list fa-lg\">Menu</span>\n                                    </NavLink>\n                                </NavItem>\n\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <span className=\"fa fa-address-card fa-lg\">Contacts</span>\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            </Collapse>\n                    </div>\n                    <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\n                                </NavItem>\n                            </Nav>\n\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante Con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                    innerRef={(input) => this.remember = input}  />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to=\"/home\">Home</Link></li>\n                            <li><Link to=\"/aboutus\">About</Link></li>\n                            <li><Link to=\"/menu\">Menu</Link></li>\n                            <li><Link to=\"/contactus\">Contact</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                                confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\n\nfunction RenderCard({item, isLoading, errMess}) {\n    \n    if (isLoading) {\n        return(\n            <Loading />\n        );\n    } \n    else if (errMess) {\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    else\n    return(\n        <FadeTransform in \n            transformProps = {{\n                exitTransform: 'scale(0.5) translateY(-50%)'\n            }} >\n            <Card>\n                <CardImg src={baseUrl + item.image} alt={item.name} />\n                <CardBody>\n                <CardTitle>{item.name}</CardTitle>\n                {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\n                <CardText>{item.description}</CardText>\n                </CardBody>\n            </Card>\n        </FadeTransform>\n    );\n\n}\n\nfunction Home(props) {\n    \n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishErrMess}/>\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess}/>\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    handleSubmit(values) {\n        alert('Thank you for your feedback! ' + JSON.stringify(values));\n        this.props.postFeedback(values);\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\" href=\"SKype:loliyl\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" className=\"form-control\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        // onChange={this.handleInputChange} \n                                        validators={{\n                                            required, \n                                            minLength: minLength(3), \n                                            maxLength: maxLength(15)\n                                        }}\n                                        />\n                                        <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\"\n                                        messages = {{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}/>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" className=\"form-control\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        // onChange={this.handleInputChange} \n                                        validators={{\n                                            required, \n                                            minLength: minLength(3), \n                                            maxLength: maxLength(15)\n                                        }}\n                                        />\n                                        <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\"\n                                        messages = {{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}/>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" className=\"form-control\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. number\"\n                                        // onChange={this.handleInputChange} \n                                        validators={{\n                                            required, \n                                            minLength: minLength(3), \n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}/>\n                                        <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\"\n                                        messages = {{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a numbers'\n                                        }}/>\n\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" className=\"form-control\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        // onChange={this.handleInputChange} \n                                        validators={{\n                                            required, \n                                            validEmail\n                                        }}/>\n                                        <Errors className=\"text-danger\" model=\".email\" show=\"touched\"\n                                        messages = {{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}/>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Col md={{ size: 6, offset: 2 }}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" className=\"form-check-input\"\n                                                name=\"agree\"\n                                                /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{ size: 3, offset: 1 }}>\n                                    <Control.select model=\".contactType\" className=\"form-conrol\" name=\"contactType\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" className=\"form-control\"\n                                        rows=\"12\" >\n                                    </Control.textarea>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Loading } from './LoadingComponent';\nimport { Stagger } from 'react-animation-components';\n\nfunction RenderLeader({ leader, isLoading, errMess }) {\n    if (isLoading) {\n        return(\n            <Loading />\n        );\n    } \n    else if (errMess) {\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    else return (\n        <div key={leader.id} className=\"col-12 mt-5\">\n            <Media tag=\"li\">\n                <Media left middle>\n                    <Media object src={baseUrl+leader.image} alt={leader.name} />\n                </Media>\n                <Media body className=\"ml-5\">\n                    <Media heading> {leader.name} </Media>\n                    <p>{leader.designation}</p>\n                    <p>{leader.description}</p>\n                </Media>\n            </Media>\n        </div>\n    );\n}\n\nfunction About(props) {\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Stagger in>\n                        <Media list>\n                            {props.leaders.leaders.map(\n                                (leader) => { \n                                    return (\n                                    <RenderLeader leader={leader}  isLoading={props.leaderLoading} errMess={props.leaderLoading} />\n                                    );\n                                }\n                            )\n                            }\n                        </Media>\n                    </Stagger>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React, { Component } from 'react';\nimport {\n    Card, CardImg, CardTitle, CardText, CardBody, Breadcrumb, BreadcrumbItem,\n    Button, Modal, ModalHeader, ModalBody, Label, Row, Col\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n    }\n\n    handleSubmit(values) {\n        // alert('Current values is: ' + JSON.stringify(values));\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Button onClick={this.toggleModal} type=\"submit\" color=\"outline-secondary\"><i className=\"fa fa-pencil\"></i> Submit Comment</Button>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\n                                <Col md={12}>\n                                    <Control.select model=\".rating\" className=\"form-control custom-select\" name=\"rating\">\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\n                                <Col md={12}>\n                                    <Control.text model=\".author\" className=\"form-control\" id=\"author\" name=\"author\"\n                                        placeholder=\"Your Name\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors className=\"text-danger\" model=\".author\" show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }} />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\n                                <Col md={12}>\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" className=\"form-control\"\n                                        rows=\"6\" >\n                                    </Control.textarea>\n                                </Col>\n                            </Row>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nfunction RenderDish({ dish }) {\n    if (dish != null) {\n        return (\n            <FadeTransform in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }} >\n\n                <Card>\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}></CardImg>\n                    <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n                    </CardBody >\n                </Card>\n            </FadeTransform>\n        );\n    } else {\n        return (<div></div>);\n    };\n}\n\nfunction RenderComments({ comments, postComment, dishId }) {\n    if (comments != null) {\n\n        const detailComments = comments.map(\n            (comment) => {\n                const options = { day: 'numeric', month: 'short', year: 'numeric' };\n                const date = new Date(comment.date).toLocaleDateString('en-Us', options);\n                return (\n                    <ul class=\"list-unstyled\">\n                        <Fade in>\n                            <li>{comment.comment}</li>\n                            <li><br></br></li>\n                            <li> -- {comment.author}, {date}</li>\n                        </Fade>\n\n                    </ul>\n                );\n            });\n        return (\n            <div>\n                <h4>Comments</h4>\n                <Stagger in>\n                {detailComments}\n                </Stagger>\n                <CommentForm dishId={dishId} postComment={postComment} />\n            </div>\n        )\n\n    } else {\n        return (<div></div>);\n    };\n}\n\nconst DishDetail = (props) => {\n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else\n        if (props.dish != null) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>{props.dish.name}</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-5 m-1\">\n                            <RenderDish dish={props.dish} />\n                        </div>\n                        <div className=\"col-12 col-md-5 m-1\">\n                            <RenderComments comments={props.comments}\n                                postComment={props.postComment}\n                                dishId={props.dish.id}\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (<div></div>);\n        };\n}\n\nexport default DishDetail;\n\n\n","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n    \n    return fetch(baseUrl + 'comments', {\n            method: \"POST\",\n            body: JSON.stringify(newComment),\n            headers: {\n            \"Content-Type\": \"application/json\"\n            },\n            credentials: \"same-origin\"\n        })\n        .then(response => {\n            if (response.ok) {\n            return response;\n            } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n            }\n            },\n            error => {\n                    throw error;})\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error =>  { \n            console.log('post comments', error.message); \n            alert('Your comment could not be posted\\nError: '+error.message); \n        });\n};\n\n\nexport const postFeedback = (values) => (dispatch) => {\n \n    const newFeedback = {\n        firstname: values.firstname,\n        lastname: values.lastname,\n        telnum: values.telnum,\n        email: values.email,\n        agree: values.agree,\n        contactType: values.contactType,\n        message: values.message\n    };\n    newFeedback.date = new Date().toISOString();\n    \n    return fetch(baseUrl + 'feedback', {\n            method: \"POST\",\n            body: JSON.stringify(newFeedback),\n            headers: {\n            \"Content-Type\": \"application/json\"\n            },\n            credentials: \"same-origin\"\n        })\n        .then(response => {\n            if (response.ok) {\n            return response;\n            } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n            }\n            },\n            error => {\n                    throw error;})\n        .then(response => response.json())\n        .then(response => dispatch(addFeedback(response)))\n        .catch(error =>  { \n            console.log('post feedback', error.message); \n            alert('Your feedback could not be posted\\nError: '+error.message); \n        });\n  };\n  \n  export const addFeedback = (feedback) => ({\n    type: ActionTypes.ADD_FEEDBACK,\n    payload: feedback\n  });  \n\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({ \n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({ \n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({ \n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {    \n    return fetch(baseUrl + 'comments')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    \n    dispatch(leadersLoading());\n\n    return fetch(baseUrl + 'leaders')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(leaders => dispatch(addLeaders(leaders)))\n    .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\n\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\n\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\n\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const ADD_PROMOS = 'ADD_PROMOS';\n\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const LEADERS_FAILED = 'PROMOS_FAILED';\nexport const ADD_LEADERS = 'ADD_LEADERS';\n","import React, { Component } from 'react';\nimport Menu from './MenuComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport DishDetail from './DishdetailComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  fetchDishes: () => { dispatch(fetchDishes()) },\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\n  fetchComments: () => dispatch(fetchComments()),\n  fetchPromos: () => dispatch(fetchPromos()),\n  fetchLeaders: () => dispatch(fetchLeaders()),\n  postFeedback: (values) => dispatch(postFeedback(values))\n});\n\nclass Main extends Component {\n\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n\n  render() {\n    const HomePage = () => {\n      return (\n        <Home\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n          dishesLoading={this.props.dishes.isLoading}\n          dishErrMess={this.props.dishes.errMess}\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n          promoLoading={this.props.promotions.isLoading}\n          promoErrMess={this.props.promotions.errMess}\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n          leaderLoading={this.props.leaders.isLoading}\n          leaderErrMess={this.props.leaders.errMess}\n        />\n      )\n    }\n\n    const DishWithId = ({ match }) => {\n      return (\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\n          isLoading={this.props.dishes.isLoading}\n          errMess={this.props.dishes.errMess}\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\n          commentsErrMess={this.props.comments.errMess}\n          postComment={this.props.postComment}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <Header />\n        <TransitionGroup>\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n            <Switch>\n              <Route path=\"/home\" component={HomePage} />\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} dishesLoading={this.props.dishes.isLoading} dishesErrMess={this.props.dishes.errMess} />} />\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\n              <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>} />\n              <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} leaderLoading={this.props.leaders.isLoading} leaderErrMess={this.props.leaders.errMess}/>} />\n              <Redirect to=\"/home\" />\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n        <Footer />\n      </div >\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n    isLoading: true,\n    errMess: null,\n    dishes: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return { ...state, isLoading: false, errMess: null, dishes: action.payload }\n        case ActionTypes.DISHES_LOADING:\n            return { ...state, isLoading: true, errMess: null, dishes: [] }\n        case ActionTypes.DISHES_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload, dishes: [] }\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state  = { isLoading: true,\n                                        errMess: null,\n                                        promotions:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n          return state;\n      }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n    isLoading: true,\n    errMess: null,\n    leaders: []\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\n\n        case ActionTypes.LEADERS_LOADING:\n            return { ...state, isLoading: true, errMess: null, leaders: [] };\n\n        case ActionTypes.LEADERS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload };\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\n    switch (action.type) {\n      case ActionTypes.ADD_COMMENTS:\n        return {...state, errMess: null, comments: action.payload};\n  \n      case ActionTypes.COMMENTS_FAILED:\n        return {...state, errMess: action.payload};\n  \n      case ActionTypes.ADD_COMMENT:\n          var comment = action.payload;\n          return { ...state, comments: state.comments.concat(comment)};\n  \n      default:\n        return state;\n    }\n  };","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport { Comments } from './comments';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger'; \nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes ,\n            promotions: Promotions,\n            leaders: Leaders,\n            comments: Comments,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }), \n        applyMiddleware(thunk, logger)\n    );\n    \n    return store;\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}