{"ast":null,"code":"var _jsxFileName = \"/Users/ivan.khrulev/Documents/Front End/Downloads/React/src/components/DishdetailComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, CardText, CardBody } from 'reactstrap';\n\nclass DishDetail extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderDish(dish) {\n    if (dish != null) {\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        width: \"100%\",\n        src: dish.image,\n        alt: dish.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, dish.name), React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, dish.description)));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    }\n\n    ;\n  }\n\n  renderComments(Comments) {\n    if (Comments != null) {\n      const DetailComments = Comments.map(Comment => {\n        var date = new Date(Comment.date);\n        return React.createElement(\"ul\", {\n          class: \"list-unstyled\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, Comment.comment), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \" -- \", Comment.author, \", \", date.datetoLocaleString(\"en-US\")));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Comments\"), DetailComments);\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    }\n\n    ;\n  }\n\n  render() {\n    if (this.props.selectedDish != null) {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        key: this.props.selectedDish.id,\n        className: \"col-12 col-md-5 m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.renderDish(this.props.selectedDish), \";\"), React.createElement(\"div\", {\n        className: \"col-12 col-md-5 m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.renderComments(this.props.selectedDish.comments)));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    }\n\n    ;\n  }\n\n}\n\n;\nexport default DishDetail;","map":{"version":3,"sources":["/Users/ivan.khrulev/Documents/Front End/Downloads/React/src/components/DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardImgOverlay","CardTitle","CardText","CardBody","DishDetail","constructor","props","renderDish","dish","image","name","description","renderComments","Comments","DetailComments","map","Comment","date","Date","comment","author","datetoLocaleString","render","selectedDish","id","comments"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,cAAxB,EAAwCC,SAAxC,EAAmDC,QAAnD,EAA6DC,QAA7D,QAA6E,YAA7E;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAE/BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,UAAU,CAACC,IAAD,EAAO;AAEb,QAAIA,IAAI,IAAI,IAAZ,EAAkB;AAEd,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,IAAI,CAACC,KAAhC;AAAuC,QAAA,GAAG,EAAED,IAAI,CAACE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYF,IAAI,CAACE,IAAjB,CADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWF,IAAI,CAACG,WAAhB,CAFJ,CAFJ,CADJ;AAUH,KAZD,MAYO;AAEH,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAEH;;AAAA;AACJ;;AAEDC,EAAAA,cAAc,CAACC,QAAD,EAAW;AAErB,QAAIA,QAAQ,IAAI,IAAhB,EAAsB;AAElB,YAAMC,cAAc,GAAGD,QAAQ,CAACE,GAAT,CAClBC,OAAD,IAAa;AAET,YAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,OAAO,CAACC,IAAjB,CAAX;AAEA,eAEI;AAAI,UAAA,KAAK,EAAC,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,OAAO,CAACG,OAAb,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAASH,OAAO,CAACI,MAAjB,QAA2BH,IAAI,CAACI,kBAAL,CAAwB,OAAxB,CAA3B,CAJJ,CAFJ;AASH,OAdkB,CAAvB;AAgBA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKP,cAFL,CADJ;AAOH,KAzBD,MAyBO;AAEH,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAEH;;AAAA;AACJ;;AAEDQ,EAAAA,MAAM,GAAG;AAEL,QAAI,KAAKhB,KAAL,CAAWiB,YAAX,IAA2B,IAA/B,EAAqC;AAEjC,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAE,KAAKjB,KAAL,CAAWiB,YAAX,CAAwBC,EAAlC;AAAsC,QAAA,SAAS,EAAC,qBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKjB,UAAL,CAAgB,KAAKD,KAAL,CAAWiB,YAA3B,CADL,MADJ,EAII;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKX,cAAL,CAAoB,KAAKN,KAAL,CAAWiB,YAAX,CAAwBE,QAA5C,CADL,CAJJ,CADJ;AAUH,KAZD,MAYO;AACH,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH;;AAAA;AAEJ;;AA/E8B;;AAgFlC;AAED,eAAerB,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, CardText, CardBody } from 'reactstrap';\n\nclass DishDetail extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    renderDish(dish) {\n       \n        if (dish != null) {\n            \n            return (\n                <Card>\n                    <CardImg width=\"100%\" src={dish.image} alt={dish.name}></CardImg>\n                    <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n                    </CardBody >\n                </Card>\n            );\n\n        } else {\n\n            return (<div></div>);\n\n        };\n    }\n\n    renderComments(Comments) {\n\n        if (Comments != null) {\n            \n            const DetailComments = Comments.map(\n                (Comment) => {\n\n                    var date = new Date(Comment.date); \n\n                    return (\n\n                        <ul class=\"list-unstyled\">\n                            <li>{Comment.comment}</li>\n                            <br></br>\n                            {/* <li> -- {Comment.author}, {Comment.date}</li> */}\n                            <li> -- {Comment.author}, {date.datetoLocaleString(\"en-US\", )}</li>\n                        </ul>\n                    );\n                });\n\n            return (\n                <div>\n                    <h4>Comments</h4>\n                    {DetailComments}\n                </div>\n            )\n\n        } else {\n            \n            return (<div></div>);\n\n        };\n    }\n\n    render() {\n\n        if (this.props.selectedDish != null) {\n\n            return (\n                <div className=\"row\">\n                    <div key={this.props.selectedDish.id} className=\"col-12 col-md-5 m-1\">\n                        {this.renderDish(this.props.selectedDish)};\n                    </div>\n                    <div className=\"col-12 col-md-5 m-1\">\n                        {this.renderComments(this.props.selectedDish.comments)}\n                    </div>\n                </div>\n            );\n        } else {\n            return (<div></div>);\n        };\n\n    }\n};\n\nexport default DishDetail;\n\n\n"]},"metadata":{},"sourceType":"module"}