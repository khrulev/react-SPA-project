{"ast":null,"code":"var _jsxFileName = \"/Users/ivan.khrulev/Documents/Front End/Downloads/React/src/components/DishdetailComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, CardText, CardBody } from 'reactstrap';\n\nclass DishDetail extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderDish(dish) {\n    if (dish != null) {\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        width: \"100%\",\n        src: dish.image,\n        alt: dish.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, dish.name), React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, dish.description)));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      });\n    }\n\n    ;\n  }\n\n  renderComments(selectedDish) {\n    const Comments = {\n      selectedDish\n    }.Comments.map(Comment => {\n      return React.createElement(\"div\", {\n        key: Comment.id,\n        className: \"col-12 col-md-5 m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"\\\"1234\\\"\"));\n    });\n\n    if (selectedDish != null) {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Comment1\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Comment0\");\n    }\n\n    ;\n  }\n\n  render() {\n    // const Comments = this.props.selectedDish.Comments.map((Comment) => {\n    //     return (\n    //         <div key={Comment.id} className=\"col-12 col-md-5 m-1\">\n    //             <h1>\"1234\"</h1>\n    //         </div>\n    //     );\n    // });\n    if (this.props.selectedDish != null) {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        key: this.props.selectedDish.id,\n        className: \"col-12 col-md-5 m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.renderDish(this.props.selectedDish), \";\"), React.createElement(\"div\", {\n        className: \"col-12 col-md-5 m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.renderComments(this.props.selectedDish)));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    }\n\n    ;\n  }\n\n}\n\n;\nexport default DishDetail;","map":{"version":3,"sources":["/Users/ivan.khrulev/Documents/Front End/Downloads/React/src/components/DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardImgOverlay","CardTitle","CardText","CardBody","DishDetail","constructor","props","renderDish","dish","image","name","description","renderComments","selectedDish","Comments","map","Comment","id","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,cAAxB,EAAwCC,SAAxC,EAAmDC,QAAnD,EAA6DC,QAA7D,QAA6E,YAA7E;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAE/BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,UAAU,CAACC,IAAD,EAAO;AACb,QAAIA,IAAI,IAAI,IAAZ,EAAkB;AACd,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,IAAI,CAACC,KAAhC;AAAuC,QAAA,GAAG,EAAED,IAAI,CAACE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYF,IAAI,CAACE,IAAjB,CADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWF,IAAI,CAACG,WAAhB,CAFJ,CAFJ,CADJ;AASH,KAVD,MAUO;AACH,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH;;AAAA;AACJ;;AAEDC,EAAAA,cAAc,CAACC,YAAD,EAAe;AAE7B,UAAMC,QAAQ,GAAG;AAACD,MAAAA;AAAD,MAAeC,QAAf,CAAwBC,GAAxB,CAA6BC,OAAD,IAAa;AAClD,aACI;AAAK,QAAA,GAAG,EAAEA,OAAO,CAACC,EAAlB;AAAsB,QAAA,SAAS,EAAC,qBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ;AAKH,KANY,CAAjB;;AAQI,QAAIJ,YAAY,IAAI,IAApB,EAA0B;AACtB,aAAQ;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAR;AACH,KAFD,MAEO;AACH,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAR;AACH;;AAAA;AAEJ;;AAEDK,EAAAA,MAAM,GAAG;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAI,KAAKZ,KAAL,CAAWO,YAAX,IAA2B,IAA/B,EAAqC;AACjC,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAE,KAAKP,KAAL,CAAWO,YAAX,CAAwBI,EAAlC;AAAsC,QAAA,SAAS,EAAC,qBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKV,UAAL,CAAgB,KAAKD,KAAL,CAAWO,YAA3B,CADL,MADJ,EAWI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKD,cAAL,CAAoB,KAAKN,KAAL,CAAWO,YAA/B,CADL,CAXJ,CADJ;AAsBH,KAvBD,MAuBO;AACH,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH;;AAAA;AAEJ;;AA7E8B;;AA8ElC;AAED,eAAeT,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, CardText, CardBody } from 'reactstrap';\n\nclass DishDetail extends Component {\n    \n    constructor(props) {\n        super(props);\n    }\n\n    renderDish(dish) {\n        if (dish != null) {\n            return (\n                <Card>\n                    <CardImg width=\"100%\" src={dish.image} alt={dish.name}></CardImg>\n                    <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n                    </CardBody >\n                </Card>\n            );\n        } else {\n            return (<div></div>);\n        };\n    }\n\n    renderComments(selectedDish) { \n\n    const Comments = {selectedDish}.Comments.map((Comment) => {\n            return (\n                <div key={Comment.id} className=\"col-12 col-md-5 m-1\">\n                    <h1>\"1234\"</h1>\n                </div>\n            );\n        });\n\n        if (selectedDish != null) {\n            return (<div className=\"row\">Comment1</div> );    \n        } else {\n            return (<div>Comment0</div>);\n        };\n\n    }\n    \n    render() {\n\n        // const Comments = this.props.selectedDish.Comments.map((Comment) => {\n        //     return (\n        //         <div key={Comment.id} className=\"col-12 col-md-5 m-1\">\n        //             <h1>\"1234\"</h1>\n        //         </div>\n        //     );\n        // });\n    \n        if (this.props.selectedDish != null) {\n            return (\n                <div className=\"row\">\n                    <div key={this.props.selectedDish.id} className=\"col-12 col-md-5 m-1\"> \n                        {this.renderDish(this.props.selectedDish)};\n                        {/* <Card>\n                            <CardImg width=\"100%\" src={this.props.selectedDish.image} alt={this.props.selectedDish.name}></CardImg>\n                            <CardBody width=\"100%\">\n                                <CardTitle>{this.props.selectedDish.name}</CardTitle>\n                                <CardText>{this.props.selectedDish.description}</CardText>\n                            </CardBody >\n                        </Card> */}\n                    </div> \n                    <div className=\"col-12 col-md-5 m-1\"> \n                        {this.renderComments(this.props.selectedDish)}\n                        {/* <Card>\n                            <CardBody width=\"100%\">\n                                <CardText>{this.props.selectedDish.Comments} </CardText>\n                            </CardBody >\n                        </Card> */}\n                    </div> \n                </div>\n            );\n        } else {\n            return (<div></div>);\n        };\n\n    }\n};\n\nexport default DishDetail;\n\n\n"]},"metadata":{},"sourceType":"module"}